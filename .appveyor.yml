image: Visual Studio 2017
build:
  parallel: true
platform: x64
configuration: Debug
environment:
  matrix:
    - PYTHON: 27
    - PYTHON: 34
    - PYTHON: 35
    - PYTHON: 36
    - PYTHON: 37
    - PYTHON: 27
      platform: x86
    - PYTHON: 37
      platform: x86
    - PYTHON: 27
      configuration: Release
    - PYTHON: 37
      configuration: Release
    - WHEELS: 1
      CIBW_SKIP: cp33-* cp35-* cp36-* cp37-*
    - WHEELS: 1
      CIBW_SKIP: cp27-* cp33-* cp34-*

branches:
  except:
    - travis
    - docs

install:
  - ps: |
      if ($env:PLATFORM -eq "x64") { $env:CMAKE_ARCH = "x64" }
      if ($env:PYTHON) {
        if ($env:PLATFORM -eq "x64") { $env:PYTHON = "$env:PYTHON-x64" }
        $env:PATH = "C:\Python$env:PYTHON\;C:\Python$env:PYTHON\Scripts\;$env:PATH"
      }
  - python -m pip install --upgrade pip
  - pip install --upgrade wheel numpy
  - if defined WHEELS ( pip install cibuildwheel )
  - if not defined WHEELS ( pip install -r tests/requirements.txt )
build_script:
  - if defined WHEELS ( set PYTHONUNBUFFERED=1 && cibuildwheel --output-dir wheelhouse )
  - if not defined WHEELS ( cmake -G "Visual Studio 15 2017" -A "%CMAKE_ARCH%" -DCMAKE_SUPPRESS_REGENERATION=1 -DCMAKE_CXX_FLAGS="/MP" )
  - if not defined WHEELS ( set MSBuildLogger="C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" )
  - if not defined WHEELS ( cmake --build . --config "%CONFIGURATION%" --target install -- /v:m /logger:%MSBuildLogger% )
test_script:
  - if not defined WHEELS ( pytest )
artifacts:
  - path: "wheelhouse\\*.whl"
    name: Wheels

deploy:
  provider: GitHub
  auth_token:
    secure: k/rbI8NyOne2TXwt49at6R7MfhL1gsMU257T++hJgCj7RsO+q6xpQfWkSqAMFfa7
  description: ''
  artifact: Wheels
  on:
    appveyor_repo_tag: true
  draft: true
