language: cpp
dist: trusty
sudo: false
cache:
  ccache: true
  directories:
    - $HOME/Library/Caches/Homebrew

env:
  global: BUILD_TYPE=Debug
compiler: gcc

matrix:
  include:
    - env: PYTHON=2.7 GCC=5
      addons: &gcc5
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-5]

    - env: PYTHON=3.4 GCC=5
      addons: *gcc5

    - env: PYTHON=3.5 GCC=5
      addons: *gcc5

    - env: PYTHON=3.6 GCC=5
      addons: &gcc5-python36
        apt:
          sources: [ubuntu-toolchain-r-test, deadsnakes]
          packages: [g++-5, python3.6-dev]

    - env: PYTHON=2.7 GCC=5 BUILD_TYPE=Release
      addons: *gcc5

    - env: PYTHON=3.6 GCC=5 BUILD_TYPE=Release
      addons: *gcc5-python36

    - env: PYTHON=2.7 GCC=7
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test]
          packages: [g++-7]

    - env: PYTHON=3.6 GCC=7
      addons:
        apt:
          sources: [ubuntu-toolchain-r-test, deadsnakes]
          packages: [g++-7, python3.6-dev]

    - env: PYTHON=2.7 CLANG=3.8
      compiler: clang
      addons:
        apt:
          packages: [clang-3.8, libc++-dev]

    - env: PYTHON=3.6 CLANG=3.8
      compiler: clang
      addons:
        apt:
          sources: [deadsnakes]
          packages: [clang-3.8, libc++-dev, python3.6-dev]

    - env: PYTHON=2.7
      os: osx
      osx_image: xcode8.3
      compiler: clang

    - env: PYTHON=3.6
      os: osx
      osx_image: xcode8.3
      compiler: clang

    - stage: wheels
      script:
        - python setup.py sdist -d wheelhouse
      deploy: &github-releases-deploy
        provider: releases
        api_key:
          secure: a/odACohfUh1T00U/v2T9TCiY4KRfgUwBsFJHf1mzmaphZIPwY8lLgYC1HvV7FD+ijrV9FQVxh+u5A+JbHlDSioW5LE5WXaB4KOYUphcCgoy47/FbyxJpQWNy62segip6/RDvKhpgHCc0Ii8qgXBSLtjyoiCRxbXyfX2u5EbD5fkU5Wip4o7Mqk2cp5NEXWx/u76SvOHH+zhueM2MkP4HvPSMI20jFs1vxb4VNK1EE++GdcZq3mwWFAJyPkuMVKxSF430Svm/qkE33btFQpdtAkUdh0jVu+tBD3RBOHvPAKab4uvDU2Pl5WFl+LYwyYKoZYQAIKVhGrwMbb5LlAaR0sfhq4YqT8HMqPBUPEOMo6OQ3zBoQER7QzHPQRFJBPptNMLtc3ugo0YdDc7bHlocDCah2TErlrzEzNxiC0vFCYv+hVSllWtQwMf56s/6LTQVxgska63tqUWbfA6M4yV37s9wJQsyrdlKnepJWdDDm1WxrZ0nhwxMN/tR+TmYi+tnDkY+JxPwBXyibg/ZARn+7spdjrKbE3uKFwQG2OqkJXiW3LOc7VDyK/s5mj1qJmHDTjTOlwyw5BDclkHAF3hvnci7BefkRRKpba01neFmoMHhdidhvvwLCxhEPTgGKW0rwUfMPJpElWJkjI1OmCpwyyEeOP0IOIZKmvdajsINJY=
        tag_name: $TRAVIS_TAG
        file_glob: true
        file: wheelhouse/*
        skip_cleanup: true
        on:
          repo: YannickJadoul/Parselmouth
          tags: true
        draft: true

    - stage: wheels
      os: linux
      sudo: required
      services:
        - docker
      install:
        - sudo pip install https://github.com/joerick/cibuildwheel/archive/master.zip
        - mkdir cmake && wget -q --no-check-certificate https://cmake.org/files/v2.8/cmake-2.8.12.2-Linux-i386.tar.gz -O - | tar xz -C cmake --strip-components=1
        - mkdir gcc-i386 && wget -q https://github.com/Noctem/pogeo-toolchain/releases/download/v1.4/gcc-7.2-binutils-2.29-centos5-i686.tar.bz2 -O - | tar xj -C gcc-i386 --strip-components=1
        - mkdir gcc-x86_64 && wget -q https://github.com/Noctem/pogeo-toolchain/releases/download/v1.4/gcc-7.2-binutils-2.29-centos5-x86-64.tar.bz2 -O - | tar xj -C gcc-x86_64 --strip-components=1
      script:
        - CIBW_SKIP="cp33-*" CIBW_ENVIRONMENT='CXXFLAGS="-static-libstdc++" PATH="`pwd`/cmake/bin:`pwd`/gcc-`uname -i`/bin:$PATH" LD_LIBRARY_PATH="`pwd`/gcc-`uname -i`/lib"' cibuildwheel
      deploy: *github-releases-deploy

    - stage: wheels
      os: osx
      compiler: clang
      script:
        - pip install cibuildwheel
        - export CCACHE_BASEDIR=`python -c "import tempfile; import os; print(os.path.realpath(tempfile.gettempdir()))"`
        - CIBW_SKIP="cp33-*" cibuildwheel
      deploy: *github-releases-deploy

before_install:
  - set -e
  - if [ "$TRAVIS_BRANCH" == "appveyor" ]; then travis_terminate 0; fi
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      if [ -n "$GCC" ]; then
        CC=gcc-$GCC
        CXX=g++-$GCC
      elif [ -n "$CLANG" ]; then
        CC="ccache clang-$CLANG"
        CXX="ccache clang++-$CLANG"
        export CFLAGS="-Qunused-arguments"
        export CXXFLAGS="-Qunused-arguments -stdlib=libc++"
      fi
      PYTHON_CMD=python$PYTHON
    elif [ "$TRAVIS_OS_NAME" == "osx" ]; then
      brew update > /dev/null
      brew install ccache
      export PATH=/usr/local/opt/ccache/libexec:$PATH
      if [ "${PYTHON%%.*}" == "3" ]; then
        brew update
        brew install python3
        PYTHON_CMD=python3
      else
        PYTHON_CMD=python
      fi
      CC=clang
      CXX=clang++
    fi

script:
  - mkdir build && cd build && cmake -DPYBIND11_PYTHON_VERSION=$PYTHON -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - make install -j 2
  - cd ../installed && $PYTHON_CMD -c "import parselmouth"
